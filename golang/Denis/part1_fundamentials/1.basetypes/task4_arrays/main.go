package main

import (
	"fmt"
	"unsafe"
)

func main() {
	fmt.Println("=== –ú–ê–°–°–ò–í–´ (ARRAYS) –í GO ===")
	fmt.Println()

	// 1. –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤
	fmt.Println("1. –û–ë–™–Ø–í–õ–ï–ù–ò–ï –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø")
	
	// –°–ø–æ—Å–æ–± 1: –° —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞
	var arr1 [5]int
	fmt.Printf("arr1: %v, —Ç–∏–ø: %T, —Ä–∞–∑–º–µ—Ä: %d –±–∞–π—Ç\n", arr1, arr1, unsafe.Sizeof(arr1))
	
	// –°–ø–æ—Å–æ–± 2: –° –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
	arr2 := [3]int{10, 20, 30}
	fmt.Printf("arr2: %v, —Ç–∏–ø: %T\n", arr2, arr2)
	
	// –°–ø–æ—Å–æ–± 3: –° –≤—ã—á–∏—Å–ª—è–µ–º—ã–º —Ä–∞–∑–º–µ—Ä–æ–º
	arr3 := [...]int{1, 2, 3, 4, 5}
	fmt.Printf("arr3: %v, —Ç–∏–ø: %T, –¥–ª–∏–Ω–∞: %d\n", arr3, arr3, len(arr3))
	
	// –°–ø–æ—Å–æ–± 4: –° —É–∫–∞–∑–∞–Ω–∏–µ–º –∏–Ω–¥–µ–∫—Å–æ–≤
	arr4 := [5]int{1: 100, 3: 300}
	fmt.Printf("arr4: %v (–Ω—É–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n", arr4)
	fmt.Println()

	// 2. –†–∞–∑–º–µ—Ä —Ç–∏–ø–∞ - —á–∞—Å—Ç—å —Ç–∏–ø–∞ –º–∞—Å—Å–∏–≤–∞!
	fmt.Println("2. –†–ê–ó–ú–ï–† - –ß–ê–°–¢–¨ –¢–ò–ü–ê (–í–ê–ñ–ù–û!)")
	var arr5 [3]int
	var arr6 [5]int
	// arr5 = arr6 // –û–®–ò–ë–ö–ê –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: cannot use arr6 (type [5]int) as type [3]int
	fmt.Printf("[3]int –∏ [5]int - –†–ê–ó–ù–´–ï —Ç–∏–ø—ã!\n")
	fmt.Printf("arr5 —Ç–∏–ø: %T\n", arr5)
	fmt.Printf("arr6 —Ç–∏–ø: %T\n", arr6)
	fmt.Println()

	// 3. –î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º
	fmt.Println("3. –î–û–°–¢–£–ü –ö –≠–õ–ï–ú–ï–ù–¢–ê–ú")
	arr7 := [5]int{10, 20, 30, 40, 50}
	fmt.Printf("arr7[0]: %d\n", arr7[0])
	fmt.Printf("arr7[4]: %d\n", arr7[4])
	
	// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
	arr7[0] = 100
	fmt.Printf("–ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: %v\n", arr7)
	fmt.Println()

	// 4. –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –º–∞—Å—Å–∏–≤—É
	fmt.Println("4. –ò–¢–ï–†–ê–¶–ò–Ø –ü–û –ú–ê–°–°–ò–í–£")
	fmt.Println("   –ü–æ –∏–Ω–¥–µ–∫—Å—É:")
	for i := 0; i < len(arr7); i++ {
		fmt.Printf("   arr7[%d] = %d\n", i, arr7[i])
	}
	
	fmt.Println("   –ß–µ—Ä–µ–∑ range:")
	for i, value := range arr7 {
		fmt.Printf("   arr7[%d] = %d\n", i, value)
	}
	fmt.Println()

	// 5. –ú–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã
	fmt.Println("5. –ú–ù–û–ì–û–ú–ï–†–ù–´–ï –ú–ê–°–°–ò–í–´")
	matrix := [2][3]int{
		{1, 2, 3},
		{4, 5, 6},
	}
	fmt.Printf("matrix: %v\n", matrix)
	fmt.Printf("matrix[1][2]: %d\n", matrix[1][2])
	fmt.Println()

	// 6. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤
	fmt.Println("6. –°–†–ê–í–ù–ï–ù–ò–ï –ú–ê–°–°–ò–í–û–í")
	a := [3]int{1, 2, 3}
	b := [3]int{1, 2, 3}
	c := [3]int{1, 2, 4}
	
	fmt.Printf("a == b: %t\n", a == b) // true
	fmt.Printf("a == c: %t\n", a == c) // false
	fmt.Printf("a != c: %t\n", a != c) // true
	fmt.Println()

	// 7. –ü–µ—Ä–µ–¥–∞—á–∞ –º–∞—Å—Å–∏–≤–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é (–ü–û–î–í–û–î–ù–´–ô –ö–ê–ú–ï–ù–¨!)
	fmt.Println("7. –ü–ï–†–ï–î–ê–ß–ê –í –§–£–ù–ö–¶–ò–Æ (–í–ê–ñ–ù–´–ô –ù–Æ–ê–ù–°)")
	arr8 := [3]int{1, 2, 3}
	fmt.Printf("–î–æ —Ñ—É–Ω–∫—Ü–∏–∏: %v\n", arr8)
	modifyArray(arr8) // –ú–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ü–û –ó–ù–ê–ß–ï–ù–ò–Æ!
	fmt.Printf("–ü–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏: %v (–Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è!)\n", arr8)
	fmt.Println()

	// 8. –†–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –∏ –ø–∞–º—è—Ç—å
	fmt.Println("8. –†–ê–ó–ú–ï–† –ü–ê–ú–Ø–¢–ò")
	smallArr1 := [3]int64{1, 2, 3}
	largeArr2 := [1000]int64{} // –ë–æ–ª—å—à–æ–π –º–∞—Å—Å–∏–≤
	
	fmt.Printf("smallArr: %d –±–∞–π—Ç\n", unsafe.Sizeof(smallArr1))
	fmt.Printf("largeArr: %d –±–∞–π—Ç\n", unsafe.Sizeof(largeArr2))
	fmt.Println("   –ú–∞—Å—Å–∏–≤—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å—Ç–µ–∫–µ (–µ—Å–ª–∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ)")
	fmt.Println()

	// 9. –ú–∞—Å—Å–∏–≤—ã –∏ –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
	fmt.Println("9. –ù–£–õ–ï–í–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø")
	var zeroArr [5]int
	var strArr [3]string
	var boolArr [2]bool
	
	fmt.Printf("zeroArr: %v\n", zeroArr)     // [0 0 0 0 0]
	fmt.Printf("strArr: %q\n", strArr)       // ["" "" ""]
	fmt.Printf("boolArr: %v\n", boolArr)     // [false false]
	fmt.Println()

	// 10. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
	fmt.Println("10. –ö–û–ì–î–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ú–ê–°–°–ò–í–´?")
	fmt.Println("   + –ö–æ–≥–¥–∞ –∏–∑–≤–µ—Å—Ç–µ–Ω —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä")
	fmt.Println("   + –î–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (–¥–æ 100-200 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)")
	fmt.Println("   + –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—Ä–∞")
	fmt.Println("   + –î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π (–ø–∞–º—è—Ç—å –≤ —Å—Ç–µ–∫–µ)")
	fmt.Println()
	fmt.Println("   - –ö–æ–≥–¥–∞ —Ä–∞–∑–º–µ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏")
	fmt.Println("   - –î–ª—è –±–æ–ª—å—à–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (–º–æ–∂–µ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–µ–∫)")
	fmt.Println("   - –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ –¥–∏–Ω–∞–º–∏—á–Ω–æ—Å—Ç—å")
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –º–∞—Å—Å–∏–≤–∞
func modifyArray(arr [3]int) {
	arr[0] = 999 // –ò–∑–º–µ–Ω—è–µ–º –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞
	fmt.Printf("   –í —Ñ—É–Ω–∫—Ü–∏–∏: %v\n", arr)
}

/*
	–ì–ª–∞–≤–Ω—ã–µ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ –º–∞—Å—Å–∏–≤–æ–≤:
	1. –†–∞–∑–º–µ—Ä - —á–∞—Å—Ç—å —Ç–∏–ø–∞
	var a [3]int
	var b [5]int
	a = b // –û–®–ò–ë–ö–ê –∫–æ–º–ø–∏–ª—è—Ü–∏–∏!
	[3]int –∏ [5]int - —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã!
	
	2. –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
	func modifyArray(arr [3]int) {
		arr[0] = 999 // –†–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ–ø–∏–µ–π!
	}

	main() {
		arr := [3]int{1, 2, 3}
		modifyArray(arr) // –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è!
	}

	–ú–∞—Å—Å–∏–≤—ã –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é - —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –∫–æ–ø–∏—è!

	3. –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
	size := 5
	arr := [size]int{} // –û–®–ò–ë–ö–ê: –†–∞–∑–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π!

	4. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–µ–∫–∞
	var bigArray [1000000]int // –ú–æ–∂–µ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–µ–∫!

	Best Practices –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤:
	- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    - –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    - –î–ª—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä–∞
    - –ò–∑–±–µ–≥–∞–π—Ç–µ –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤ (–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–∞–π—Å—ã)
	- –ú–∞—Å—Å–∏–≤—ã –æ—Ç 1 –¥–æ 100 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è —Å—Ç–µ–∫–∞
    - –ú–∞—Å—Å–∏–≤—ã 100-1000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, –º–æ–∂–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å—Å—è
    - –ú–∞—Å—Å–∏–≤—ã >1000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª–∏ –∏–ª–∏ —Å–ª–∞–π—Å—ã

	func process(arr *[1000]int) { // –ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞—Ç–µ–ª—å (8 –±–∞–π—Ç)
		arr[0] = 999 // –ò–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª!
	}

	üìç –°–¢–ï–ö (Stack)
	func main() {
		smallArr := [3]int64{1, 2, 3} // 24 –±–∞–π—Ç–∞ - –≤ –°–¢–ï–ö–ï
		// smallArr –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ main
	}

	üóÉÔ∏è –ö–£–ß–ê (Heap)
	func main() {
		largeSlice := make([]int64, 1000) // 8000 –±–∞–π—Ç - –≤ –ö–£–ß–ï
		// largeSlice –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —Å–±–æ—Ä—â–∏–∫–æ–º –º—É—Å–æ—Ä–∞ (GC)
	}

	üéØ –ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑–ª–∏—á–∏—è:
		–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞		–°–¢–ï–ö					–ö–£–ß–ê
		–°–∫–æ—Ä–æ—Å—Ç—å			‚ö°Ô∏è –û—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π		üê¢ –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –º–µ–¥–ª–µ–Ω–Ω—ã–π
		–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ			–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ (LIFO)	–†—É—á–Ω–æ–µ (GC)
		–†–∞–∑–º–µ—Ä				–û–≥—Ä–∞–Ω–∏—á–µ–Ω (‚àº1-8MB)		–ë–æ–ª—å—à–æ–π (–≥–∏–≥–∞–±–∞–π—Ç—ã)
		–í—Ä–µ–º—è –∂–∏–∑–Ω–∏			–û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏		–ü–æ–∫–∞ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏
		–§—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è		–ù–µ—Ç						–í–æ–∑–º–æ–∂–Ω–∞
	
	üîç Go —Å–∞–º —Ä–µ—à–∞–µ—Ç —á—Ç–æ –∫—É–¥–∞ –ø–æ–ª–æ–∂–∏—Ç—å!

	–û–±—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ: 
		–ï—Å–ª–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –º–æ–∂–µ—Ç –¥–æ–∫–∞–∑–∞—Ç—å, 
		—á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω—É–∂–Ω–∞ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Üí –æ–Ω–∞ –≤ –ö–£–ß–ï.

	func createArray() *[3]int {
		arr := [3]int{1, 2, 3} // –í—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Ñ—É–Ω–∫—Ü–∏–∏!
		return &arr             // –ü–æ—ç—Ç–æ–º—É –≤ –ö–£–ß–ï!
	}

	üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ:
		–ú–µ–ª–∫–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üí —Å—Ç–µ–∫
		–ö—Ä—É–ø–Ω—ã–µ –∏–ª–∏ –ø–µ—Ä–µ–∂–∏–≤–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏—é ‚Üí –∫—É—á–∞

	–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä Go —É–º–Ω—ã–π –∏ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–µ–∫ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏! üöÄ
*/
